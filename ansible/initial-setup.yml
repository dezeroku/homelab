---
- name: Check if the host is already bootstrapped
  hosts: all
  gather_facts: false
  pre_tasks:
    - name: Check if the host is already bootstrapped
      changed_when: false
      check_mode: false
      ignore_errors: true
      ignore_unreachable: true
      ansible.builtin.raw: /bin/true
      register: bootstrap_check

    - name: Save proper ansible_user config
      ansible.builtin.set_fact:
        ansible_user_original: "{{ ansible_user }}"
        ansible_become_pass_original: "{{ ansible_become_pass | default(user_password) | default('') }}"

    - name: Set the bootstrap user
      when: bootstrap_check.get('unreachable')
      ansible.builtin.set_fact:
        # Use the hardcoded bootstrap user to perform the actions if the "normal" one is not yet created
        ansible_user: "{{ ansible_bootstrap_user }}"
        ansible_bootstrap_user_become_pass: ""

- name: Create user
  hosts: all
  become: true
  become_user: root
  vars:
    ansible_become_pass: "{{ ansible_bootstrap_user_become_pass | default(ansible_become_pass_original) }}"
    user_name: "{{ ansible_user_original }}"
  tags:
    - initial_setup_user
  roles:
    - server_user

- name: Set the proper variables again
  hosts: all
  tasks:
    - name: Set the "normal" user
      when: bootstrap_check.get('unreachable')
      ansible.builtin.set_fact:
        # Use the "normal" user once it's created
        ansible_user: "{{ ansible_user_original }}"

- name: Clean up bootstrap user
  hosts: all
  become: true
  become_user: root
  tags:
    - initial_setup_cleanup
  roles:
    - {role: cleanup_bootstrap_user, when: vars.cleanup_bootstrap_user}
