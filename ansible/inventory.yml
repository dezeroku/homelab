---
k8s_controlplanes:
  hosts:
    homeserver-five:
    homeserver-six:
    homeserver-seven:

    homeserver-backup-one:
    homeserver-backup-two:
    homeserver-backup-three:

k8s_workers:
  # TODO: an empty node_label list breaks the initialization and flannel
  # for now let's just add a label for each node, falling back to dummylabel
  hosts:
    homeserver-eight:
    #  vars:
    #    node_label:
    #      # - dezeroku.com/dummy-label=true
    #      - node.longhorn.io/create-default-disk=true

k8s_homeserver:
  vars:
    k8s_context: homeserver
    k8s_node_additional_annotation: {}
    k8s_node_additional_label: &homeserver-additional-label
      node.longhorn.io/create-default-disk: config
    rke2_cluster_group_name: k8s_homeserver
    rke2_additional_sans:
      - homeserver
  hosts:
    homeserver-five:
      k8s_node_additional_annotation:
        # Reserve 400GB on the primary NVMe
        node.longhorn.io/default-disks-config: &longhorn-homeserver-single >-
          [
            {
              "path":"/var/lib/longhorn",
              "allowScheduling":true,
              "storageReserved":429496729600,
              "tags":[ "nvme" ]
            }
          ]
      k8s_node_additional_label:
        <<: *homeserver-additional-label
        node-role.kubernetes.io/loadbalancer: "true"
    homeserver-six:
      k8s_node_additional_annotation:
        node.longhorn.io/default-disks-config: *longhorn-homeserver-single
      k8s_node_additional_label:
        <<: *homeserver-additional-label
        node-role.kubernetes.io/loadbalancer: "true"
    homeserver-seven:
      k8s_node_additional_annotation:
        node.longhorn.io/default-disks-config: *longhorn-homeserver-single
      k8s_node_additional_label:
        <<: *homeserver-additional-label
        node-role.kubernetes.io/loadbalancer: "true"
    homeserver-eight:
      k8s_node_additional_annotation:
        # Reserve 400GB on the primary NVMe and
        # 10GB on the secondary SSD
        node.longhorn.io/default-disks-config: &longhorn-homeserver-double >-
          [
            {
              "path":"/var/lib/longhorn",
              "allowScheduling":true,
              "storageReserved":429496729600,
              "tags":[ "nvme" ]
            },
            {
                "name":"longhorn-ssd",
                "path":"/longhorn-ssd",
                "allowScheduling":true,
                "storageReserved":10737418240,
                "tags":[ "ssd" ]
            }
          ]

k8s_homeserver_backup:
  hosts:
    homeserver-backup-one:
    homeserver-backup-two:
    homeserver-backup-three:
  vars:
    k8s_context: homeserver-backup
    k8s_node_additional_annotation: {}
    k8s_node_additional_label:
      node-role.kubernetes.io/loadbalancer: "true"
    k3s_control_node: true
    node_label:
      - node.longhorn.io/create-default-disk=true
    k3s_become: true
    k3s_etcd_datastore: true
    k3s_release_version: v1.30.3+k3s1
    k3s_tls_san:
      - homeserver-backup

k8s_nodes:
  children:
    k8s_homeserver:
    k8s_homeserver_backup:

misc:
  hosts:
    printserver:

rack_rpis:
  hosts:
    homeserver-backup-one:
    homeserver-backup-two:
    homeserver-backup-three:
  vars:
    poe_plus_hat: true
    raspi_os: true

rack_dells:
  hosts:
    homeserver-five:
    homeserver-six:
    homeserver-seven:
    homeserver-eight:

all:
  children:
    misc:
    k8s_nodes:
  vars:
    ansible_connection: ssh
    ansible_user: server
    # username to use during the initial provisioning
    ansible_bootstrap_user: ansible_bootstrap
    ssh_pub_key_file: ~/.ssh/id_smartcard_dezeroku.pub
    cleanup_bootstrap_user: true
    upgrade_packages: false
    timezone: Europe/Warsaw
    # Comment out the below variable if it's the initial homeserver deploy
    # as the mirror deployment won't be in place at this point
    apt_mirror_pacoloco_url: https://pacoloco.home.dezeroku.com
