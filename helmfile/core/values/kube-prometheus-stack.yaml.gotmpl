# K3S specific stuff,
# taken from https://github.com/k3s-io/k3s/issues/3619
# Unfortunately hardcoded IPs, so just disable these for now
# Disabling these disables a lot of the monitoring...
# But it's on a best-effort basis
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false

alertmanager:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - alertmanager"
      nginx.ingress.kubernetes.io/auth-secret: alertmanager-ingress-basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: alertmanager-general-tls
        hosts:
          - alertmanager.{{ requiredEnv "DOMAIN" }}

  config:
    route:
      # Basically do not group at all
      # we don't get that many alerts
      group_by: ['...']
      receiver: default
      routes:
      - receiver: pagerduty
        matchers:
          - alertname !~ "InfoInhibitor|Watchdog"
      - receiver: deadman
        group_wait: 0s
        group_interval: 1m
        repeat_interval: 50s
        matchers:
          - alertname = Watchdog
    receivers:
    - name: default
    - name: pagerduty
      pagerduty_configs:
      - routing_key_file: /etc/alertmanager/secrets/alertmanager-pagerduty-token/token
        send_resolved: true
    - name: deadman
      webhook_configs:
      - url_file: /etc/alertmanager/secrets/alertmanager-deadmanssnitch-url/url

  alertmanagerSpec:
    secrets:
    - alertmanager-pagerduty-token
    - alertmanager-deadmanssnitch-url
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi

grafana:
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-username
    passwordKey: admin-password
  defaultDashboardsTimezone: Europe/Warsaw
  plugins:
    - grafana-piechart-panel
  #grafana.ini:
  #  auth.anonymous:
  #    enabled: true
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: grafana-general-tls
        hosts:
          - grafana.{{ requiredEnv "DOMAIN" }}

prometheus:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - prometheus"
      nginx.ingress.kubernetes.io/auth-secret: prometheus-ingress-basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: prometheus-general-tls
        hosts:
          - prometheus.{{ requiredEnv "DOMAIN" }}

  prometheusSpec:
    # Search for monitors and rules outside of its own namespace
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false

    retention: 360d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 150Gi
    additionalScrapeConfigs:
      - job_name: node-exporter
        static_configs:
          - targets: ['devserver.lan:9100']
          #- targets: ['dezeroku-desktop.lan:9100']
