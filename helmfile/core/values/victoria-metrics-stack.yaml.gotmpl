# K3S specific stuff,
# taken from https://github.com/k3s-io/k3s/issues/3619
# Unfortunately hardcoded IPs, so just disable these for now
# Disabling these disables a lot of the monitoring...
# But it's on a best-effort basis
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false

victoria-metrics-operator:
  operator:
    # Allow us to still use the ServiceMonitors CRDs
    # TODO: this chart doesn't install CRDs for prometheus stuff
    # We should do it as part of helmfile.yaml
    disable_prometheus_converter: false

alertmanager:
  config:
    route:
      # Basically do not group at all
      # we don't get that many alerts
      group_by: ['...']
      receiver: default
      routes:
      - receiver: pagerduty
        matchers:
          - alertname !~ "InfoInhibitor|Watchdog"
      - receiver: deadman
        group_wait: 0s
        group_interval: 1m
        repeat_interval: 50s
        matchers:
          - alertname = Watchdog
    receivers:
    - name: default
    - name: pagerduty
      pagerduty_configs:
      - routing_key_file: /etc/vm/secrets/alertmanager-pagerduty-token/token
        send_resolved: true
    - name: deadman
      webhook_configs:
      - url_file: /etc/vm/secrets/alertmanager-deadmanssnitch-url/url
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - alertmanager"
      nginx.ingress.kubernetes.io/auth-secret: alertmanager-ingress-basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: alertmanager-general-tls
        hosts:
          - alertmanager.{{ requiredEnv "DOMAIN" }}
  spec:
    image:
      # TODO: we manually bump to this version to have support for url_file webhook config
      # get rid of this when a new enough version is vendored in the chart itself
      tag: v0.27.0
    externalURL: https://alertmanager.{{ requiredEnv "DOMAIN" }}
    secrets:
    - alertmanager-pagerduty-token
    - alertmanager-deadmanssnitch-url
    storage:
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          storageClassName: longhorn
          resources:
            requests:
              storage: 5Gi

grafana:
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-username
    passwordKey: admin-password
  defaultDashboardsTimezone: Europe/Warsaw
  plugins:
    - grafana-piechart-panel
  #grafana.ini:
  #  auth.anonymous:
  #    enabled: true
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: grafana-general-tls
        hosts:
          - grafana.{{ requiredEnv "DOMAIN" }}

vmsingle:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - prometheus"
      nginx.ingress.kubernetes.io/auth-secret: prometheus-ingress-basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: prometheus-general-tls
        hosts:
          - prometheus.{{ requiredEnv "DOMAIN" }}

  spec:
    resources:
      requests:
        memory: 1000Mi
      limits:
        memory: 2250Mi
    retentionPeriod: "360d"
    storage:
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          storageClassName: longhorn
          resources:
            requests:
              storage: 5Gi

vmagent:
  # Give it some room to breathe, defaults cause it to throttle
  # Maybe let's get rid of these completely?
  spec:
    resources:
      requests:
        cpu: 250m
      limits:
        cpu: 1
  additionalScrapeConfigs: |
    - job_name: node-exporter
      static_configs:
        - targets: ['devserver.lan:9100']
        #- targets: ['dezeroku-desktop.lan:9100']

vmalert:
  spec:
    extraArgs:
      # TODO: this feels a little bit hacky, but seems this option can't be defined in a different way?
      external.url: https://prometheus.{{ requiredEnv "DOMAIN" }}
