secrets:
  existingSecret: minio-root-credentials

tenant:
  name: private
  configuration:
    name: minio-root-credentials
  pools:
    - servers: 1
      volumesPerServer: 1
      size: 150Gi
      storageClassName: longhorn
  metrics:
    enabled: true
  #prometheusOperator: true
  features:
    bucketDNS: true
  buckets:
    - name: test
    - name: misc
  users:
    - name: minio-dezeroku-user-secret
ingress:
  api:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      # TODO: make it prettier
      nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/server-snippet: |
        client_max_body_size 0;
      nginx.ingress.kubernetes.io/configuration-snippet: |
        chunked_transfer_encoding off;
    tls:
      - secretName: minio-api-general-tls
        hosts:
          - api.private.minio.{{ requiredEnv "DOMAIN" }}
    host: api.private.minio.{{ requiredEnv "DOMAIN" }}
  console:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      # TODO: make it prettier
      nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/server-snippet: |
        client_max_body_size 0;
      nginx.ingress.kubernetes.io/configuration-snippet: |
        chunked_transfer_encoding off;
    tls:
      - secretName: minio-console-general-tls
        hosts:
          - private.minio.{{ requiredEnv "DOMAIN" }}
    host: private.minio.{{ requiredEnv "DOMAIN" }}
