# This is migrated https://github.com/iv-org/invidious/tree/master/kubernetes basically
# with minor changes related to the app-template and secrets in use
---
defaultPodOptions:
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

controllers:
  main:
    #strategy: Recreate
    strategy: RollingUpdate
    # invidious is single-threaded, so bumping number
    # of replicas significantly speeds up things such as loading thumbnails
    replicas: 1
    containers:
      main:
        image:
          repository: quay.io/invidious/invidious
          tag: latest-arm64
          pullPolicy: Always
        env:
          # https://github.com/iv-org/invidious/issues/2970
          INVIDIOUS_PORT: 3000
          INVIDIOUS_CONFIG_FILE: /config/config.yaml
          INVIDIOUS_DATABASE_URL:
            valueFrom:
              secretKeyRef:
                name: invidious-db-pguser-invidious
                key: uri
          INVIDIOUS_HMAC_KEY:
            valueFrom:
              secretKeyRef:
                name: invidious-hmac
                key: key
        probes:
          readiness:
            enabled: true
          liveness:
            enabled: true
          startup:
            enabled: true
            spec:
              failureThreshold: 15
        resources:
          limits:
            memory: 1024Mi
          requests:
            memory: 64Mi

    initContainers:
      wait-for-postgresql:
        env:
          DB_HOST:
            valueFrom:
              secretKeyRef:
                name: invidious-db-pguser-invidious
                key: host
          DB_PORT:
            valueFrom:
              secretKeyRef:
                name: invidious-db-pguser-invidious
                key: port
          DB_USER:
            valueFrom:
              secretKeyRef:
                name: invidious-db-pguser-invidious
                key: user
          DB_NAME:
            valueFrom:
              secretKeyRef:
                name: invidious-db-pguser-invidious
                key: dbname
        image:
          repository: postgres
          tag: 15.5-alpine
        args:
          - /bin/sh
          - -c
          - until pg_isready -h "$(DB_HOST)" -p "$(DB_PORT)" -U "$(DB_USER)" -d "$(DB_NAME)"; do echo waiting for database; sleep 2; done;
        resources: {}

service:
  main:
    controller: main
    ports:
      http:
        port: 3000

ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cert-manager-letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.2.0/24,192.168.69.0/24"
      # These below are useful for importing the history
      # probably could be lowered to something like 5MBs too
      # On the other hand they're mostly one-off runs, so
      # let's juts keep the defaults and change when needed
      #nginx.ingress.kubernetes.io/proxy-body-size: "0"
      #nginx.ingress.kubernetes.io/server-snippet: |
      #  client_max_body_size 0;
    tls:
      - secretName: invidious-general-tls
        hosts:
          - invidious.{{ requiredEnv "DOMAIN" }}
    hosts:
      - host: invidious.{{ requiredEnv "DOMAIN" }}
        paths:
          - path: /
            service:
              identifier: main

configMaps:
  config:
    enabled: true
    data:
      config.yaml: |
        check_tables: true
        external_port: 443
        domain: invidious.{{ requiredEnv "DOMAIN" }}
        https_only: true
        # statistics_enabled: false
        default_user_preferences:
          region: PL
          quality: dash
          quality_dash: 1080p
          save_player_pos: true
          unseen_only: true
          autoplay: true
          # proxy through instance
          # local: true

persistence:
  config:
    enabled: true
    type: custom
    volumeSpec:
      configMap:
        name: invidious-config
