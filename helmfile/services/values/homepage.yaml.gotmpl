---
# Mostly based on https://github.com/jameswynn/helm-charts/tree/main/charts/homepage
# but converted to pure app-template for more control and easier upgrades

global:
  alwaysAppendIdentifierToResourceName: true

controllers:
  main:
    #strategy: Recreate
    strategy: RollingUpdate
    serviceAccount:
      identifier: main
    containers:
      main:
        image:
          repository: ghcr.io/gethomepage/homepage
          tag: v1.4.6
          pullPolicy: IfNotPresent
        env:
          TZ: Europe/Warsaw
          # TODO: we currently use service discovery for ingresses, but still have to
          # explicitly specify VSO secrets here
          HOMEPAGE_VAR_JELLYFIN_API_KEY:
            valueFrom:
              secretKeyRef:
                name: jellyfin
                key: apikey
          HOMEPAGE_ALLOWED_HOSTS: {{ requiredEnv "DOMAIN" }}
        probes:
          readiness:
            enabled: true
          liveness:
            enabled: true
          startup:
            enabled: true
            spec:
              failureThreshold: 30
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 256Mi

service:
  main:
    controller: main
    ports:
      http:
        port: 3000

ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cert-manager-letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.2.0/24,192.168.69.0/24,192.168.70.0/24,192.168.71.0/24"
    tls:
      - secretName: homepage-general-tls
        hosts:
          - {{ requiredEnv "DOMAIN" }}
    hosts:
      - host: {{ requiredEnv "DOMAIN" }}
        paths:
          - path: /
            service:
              identifier: main

serviceAccount:
  main: {}

configMaps:
  config:
    enabled: true
    data:
      custom.js: |
        # Redirect to the default tab if no tab is chosen
        document.addEventListener("DOMContentLoaded", function () {
            if (window.location.pathname === "/" && !window.location.hash) {
                window.location.replace("/#for-users");
            }
        });
      bookmarks.yaml: ""
      docker.yaml: ""
      kubernetes.yaml: |
        mode: cluster
      services.yaml: ""
      settings.yaml: |
        layout:
          Tools:
            tab: For Users
          Services:
            tab: For Users
          Media:
            tab: For Users
          YT:
            tab: For Users
          Utils:
            tab: Personal
          Storage:
            tab: For Admins
          Monitoring:
            tab: For Admins
          Media Management:
            tab: For Admins
          Cluster:
            tab: For Admins
          Server:
            tab: For Admins
          IoT:
            tab: For Admins
      widgets.yaml: |
        - kubernetes:
            cluster:
              cpu: true
              label: homeserver
              memory: true
              show: true
              showLabel: true
            nodes:
              cpu: true
              memory: true
              show: false
              showLabel: true
#        - greeting:
#            text_size: 3xl
#            text: Scheduled maintenance work in progress, some services might be unavailable

persistence:
  config:
    enabled: true
    type: configMap
    name: homepage-config
    advancedMounts:
      main:
        main:
          - path: /app/config/bookmarks.yaml
            subPath: bookmarks.yaml
          - path: /app/config/docker.yaml
            subPath: docker.yaml
          - path: /app/config/kubernetes.yaml
            subPath: kubernetes.yaml
          - path: /app/config/services.yaml
            subPath: services.yaml
          - path: /app/config/settings.yaml
            subPath: settings.yaml
          - path: /app/config/widgets.yaml
            subPath: widgets.yaml
          - path: /app/config/custom.js
            subPath: custom.js
  logs:
    enabled: true
    type: emptyDir
    globalMounts:
      - path: /app/config/logs

rbac:
  roles:
    cluster-role:
      type: ClusterRole
      rules:
        - apiGroups:
            - ""
          resources:
            - namespaces
            - pods
            - nodes
          verbs:
            - get
            - list
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingresses
          verbs:
            - get
            - list
        - apiGroups:
            - traefik.containo.us
            - traefik.io
          resources:
            - ingressroutes
          verbs:
            - get
            - list
        - apiGroups:
            - metrics.k8s.io
          resources:
            - nodes
            - pods
          verbs:
            - get
            - list
        - apiGroups:
            - apiextensions.k8s.io
          resources:
            - customresourcedefinitions/status
          verbs:
            - get
  bindings:
    cluster-role-binding:
      type: ClusterRoleBinding
      roleRef:
        identifier: cluster-role
      subjects:
        - identifier: main

rawResources:
  vault-auth:
    apiVersion: secrets.hashicorp.com/v1beta1
    kind: VaultAuth
    spec:
      spec:
        method: kubernetes
        mount: k8s/homeserver
        kubernetes:
          role: homepage
          serviceAccount: homepage-main
  jellyfin:
    apiVersion: secrets.hashicorp.com/v1beta1
    kind: VaultStaticSecret
    spec:
      spec:
        type: kv-v2
        mount: kvv2
        path: services/homepage/jellyfin
        destination:
          name: jellyfin
          create: true
        vaultAuthRef: homepage-vault-auth
