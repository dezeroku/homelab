global:
  fallbackDefaults:
    storageClass: longhorn

securityContext:
  pod:
    # ID of the "video" and "render" groups in Debian
    # For proper hardware acceleration support
    # TODO: shouldn't this be handled by the plugin somehow?
    supplementalGroups:
      - 44
      - 105

resources:
  limits:
    memory: 8Gi
    gpu.intel.com/i915: "1"

podOptions:
  nodeSelector:
    dezeroku.com/role: media-server

persistence:
  config:
    size: 1Gi

  media-storage-main:
    enabled: true
    type: pvc
    mountPath: /media-storage-main
    targetSelectAll: true
    existingClaim: media-storage-main

portal:
  open:
    enabled: false

ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cert-manager-letsencrypt-dns-prod"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Media Server
      gethomepage.dev/group: Media
      gethomepage.dev/icon: jellyfin.png
      gethomepage.dev/name: Jellyfin
      #gethomepage.dev/widget.type: "jellyfin"
      #gethomepage.dev/widget.url: "https://jellyfin.home.dezeroku.com"
      #gethomepage.dev/widget.key: "{{ "{{`{{" }}HOMEPAGE_VAR_JELLYFIN_API_KEY{{ "}}`}}" }}"
      #gethomepage.dev/widget.enableBlocks: "true"
      #gethomepage.dev/widget.enableNowPlaying: "false"
      # We allow access from 192.168.4.0/24 so traffic to Ingress is accepted from the network cluster lives in
      # This is done so homepage deployment can query the API
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.4.0/24,192.168.69.0/24"
    ingressClassName: nginx
    integrations:
      traefik:
        enabled: false
    hosts:
      - host: jellyfin.{{ requiredEnv "DOMAIN" }}
        paths:
          - path: /
    tls:
      - secretName: jellyfin-tls
        hosts:
          - jellyfin.{{ requiredEnv "DOMAIN" }}
