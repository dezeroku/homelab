---
global:
  alwaysAppendIdentifierToResourceName: true

defaultPodOptions:
  securityContext:
  # TODO: the PUID env approach doesn't really work with a proper securityContext
#    runAsUser: 1000
#    runAsGroup: 1000
    fsGroup: 1000
  nodeSelector:
    # Lock the arch to amd64 to avoid problems with venv
    # TODO: maybe let's make the whole venv ephemeral?
    kubernetes.io/arch: amd64

controllers:
  main:
    strategy: Recreate
    serviceAccount:
      identifier: main
    containers:
      main:
        image:
          repository: phasecorex/red-discordbot
          tag: audio
          pullPolicy: IfNotPresent
        env:
          TZ: Europe/Warsaw
          PREFIX: /
          PREFIX2: .
          PUID: 1000
          REDBOT_VERSION: "~=3.5.13"
          #OWNER:
          #  valueFrom:
          #    secretKeyRef:
          #      name: redbot
          #      key: owner
          TOKEN:
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Labels.appName }}-secrets
                key: token
        resources:
          limits:
            memory: 4Gi
          requests:
            memory: 256Mi
      filebrowser:
        image:
          repository: filebrowser/filebrowser
          tag: v2.43.0
          pullPolicy: IfNotPresent
        env:
          # Auth via oauth2-proxy
          FB_NOAUTH: true
        probes:
          readiness:
            enabled: true
          liveness:
            enabled: true
        resources:
          limits:
            memory: 1024Mi
          requests:
            memory: 128Mi
        securityContext:
          # TODO: make it 568
          # Override for filebrowser
          runAsUser: 0
          runAsGroup: 0
          fsGroup: 0

serviceAccount:
  main: {}

service:
  filebrowser:
    controller: main
    ports:
      http-filebrowser:
        port: 80

ingress:
  filebrowser:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cert-manager-letsencrypt-dns-prod"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Storage for lavalink music, {{ .Release.Name }}
      gethomepage.dev/group: Media Management
      gethomepage.dev/icon: filebrowser.png
      gethomepage.dev/name: File Browser ({{ .Release.Name }})
      gethomepage.dev/pod-selector: "app.kubernetes.io/name={{ .Release.Name }}"
      nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.1.0/24,192.168.69.0/24"
      nginx.ingress.kubernetes.io/auth-url: "https://sso.{{ requiredEnv "DOMAIN" }}/oauth2/auth?allowed_emails=contact@dezeroku.com"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.{{ requiredEnv "DOMAIN" }}/oauth2/start?rd=https://$host$escaped_request_uri"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    tls:
      - secretName: filebrowser-{{ .Release.Name }}-tls
        hosts:
          - filebrowser.{{ .Release.Name }}.{{ requiredEnv "DOMAIN" }}
    hosts:
      - host: filebrowser.{{ .Release.Name }}.{{ requiredEnv "DOMAIN" }}
        paths:
          - path: /
            service:
              identifier: filebrowser

persistence:
  storage:
    type: persistentVolumeClaim
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /data

  localtracks:
    enabled: true
    type: persistentVolumeClaim
    storageClass: longhorn-ssd-double-replica
    accessMode: ReadWriteMany
    size: 10Gi
    advancedMounts:
      main:
        main:
          - path: /localtracks
        filebrowser:
          - path: /srv

rawResources:
  vault-auth:
    apiVersion: secrets.hashicorp.com/v1beta1
    kind: VaultAuth
    spec:
      spec:
        method: kubernetes
        mount: k8s/homeserver
        kubernetes:
          role: {{ .Release.Labels.vaultRole }}
          serviceAccount: {{ .Release.Name }}-main
  secrets:
    apiVersion: secrets.hashicorp.com/v1beta1
    kind: VaultStaticSecret
    spec:
      spec:
        type: kv-v2
        mount: kvv2
        path: services/{{ .Release.Labels.vaultSubPath }}/secrets
        destination:
          name: {{ .Release.Labels.appName }}-secrets
          create: true
        vaultAuthRef: {{ .Release.Labels.appName }}-vault-auth
